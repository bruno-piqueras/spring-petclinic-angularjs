# This workflow will build a package using Maven and then publish it to GitHub packages when a release is created
# For more information see: https://github.com/actions/setup-java#apache-maven-with-a-settings-path

name: Maven Package

on:
  push:
   

env:
  # TODO: Change variable to your image's name.
  IMAGE_NAME: springboot-petclinic

jobs:
  build:

    runs-on: ubuntu-latest

    steps:
    - uses: actions/checkout@v2
    - name: Set up JDK 1.8
      uses: actions/setup-java@v1
      with:
        java-version: 1.8
        server-id: github # Value of the distributionManagement/repository/id field of the pom.xml
        settings-path: ${{ github.workspace }} # location for the settings.xml file

#    - name: Build with Maven
#      run: mvn -B package --file pom.xml
#
#    - name: Publish to GitHub Packages Apache Maven
#      run: mvn deploy -s $GITHUB_WORKSPACE/settings.xml
#      env:
#        GITHUB_TOKEN: ${{ github.token }}
#        
    - name: Set Release version env variable
      run: |
      echo "RELEASE_VERSION=$(mvn help:evaluate -Dexpression=project.version -q -DforceStdout)" >> $GITHUB_ENV

    
    - name: Build maven packages
      run: ./mvnw clean install

    - name: Build image
      run: cd spring-petclinic-server && mvn package docker:build

    - name: Log into registry
      run: echo "${{ secrets.DOCKERHUB_TOKEN }}" | docker login index.docker.io -u brunopiqueras --password-stdin

    - name: Push image
      run: |
        IMAGE_ID=index.docker.io/brunopiqueras/$IMAGE_NAME

        docker push $IMAGE_ID:$RELEASE_VERSION
        docker push $IMAGE_ID:latest

